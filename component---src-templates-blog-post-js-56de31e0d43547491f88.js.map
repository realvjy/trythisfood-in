{"version":3,"sources":["webpack:///./src/components/footer.js","webpack:///./src/templates/blog-post.js"],"names":["Footer","render","this","props","location","title","children","className","href","src","React","Component","BlogPostTemplate","post","data","markdownRemark","siteTitle","site","siteMetadata","pageContext","c_list","previous","next","allMarkdownRemark","edges","frontmatter","description","excerpt","to","map","node","key","fields","slug","cover_image","childImageSharp","fluid","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"8IAKMA,E,gLACJC,OAAA,WAAU,IAAD,EAC+BC,KAAKC,MADpC,EACCC,SADD,EACWC,MADX,EACkBC,SAGvB,oCACA,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBAOrB,OACE,6BACE,4BAAQA,UAAU,aAChB,yBAAKA,UAAU,SACb,yBAAKA,UAAU,QAAO,uBAAGC,KAAK,IAAR,KAAa,yBAAKC,IAAI,YAAYF,UAAU,WAClE,yBAAKA,UAAU,QACb,uBAAGC,KAAK,UAAR,SADF,MAC+B,uBAAGA,KAAK,IAAR,aAGjC,yBAAKD,UAAU,UACb,yBAAKA,UAAU,SAAf,mBADF,IAC+C,yBAAKA,UAAU,aAAY,uBAAGC,KAAK,+BAAR,eAA3B,MAAmF,uBAAGA,KAAK,kCAAR,kB,GAzBvHE,IAAMC,WAiCZX,O,gKC/BTY,E,gLACJX,OAAA,WACE,IAAMY,EAAOX,KAAKC,MAAMW,KAAKC,eACvBC,EAAYd,KAAKC,MAAMW,KAAKG,KAAKC,aAAab,MAF7C,EAGoBH,KAAKC,MAAMgB,YAChCC,GAJC,EAGCC,SAHD,EAGWC,KACHpB,KAAKC,MAAMW,KAAKS,kBAAkBC,OACjD,OACE,kBAAC,IAAD,CAAQpB,SAAUF,KAAKC,MAAMC,SAAUC,MAAOW,GAC5C,kBAAC,IAAD,CACEX,MAAOQ,EAAKY,YAAYpB,MACxBqB,YAAab,EAAKY,YAAYC,aAAeb,EAAKc,UAEpD,yBAAKpB,UAAU,sBACb,yBAAKA,UAAU,aACb,kBAAC,OAAD,CAAMqB,GAAE,IAAOrB,UAAU,SACvB,yBAAKE,IAAI,YAAYF,UAAU,UAGjC,yBAAKA,UAAU,iBACX,4BAAQA,UAAU,YACbM,EAAKY,YAAYpB,MADtB,IAC6B,0BAAME,UAAU,WAAU,yBAAKE,IAAI,sBAEhE,wBAAIF,UAAU,UACXa,EAAOS,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACb,OACE,wBAAIC,IAAKD,EAAKE,OAAOC,MAAM,uBAAGzB,KAAMsB,EAAKE,OAAOC,MAAOH,EAAKL,YAAYpB,cAMpF,yBAAKE,UAAU,SACb,uBAAGC,KAAK,+IAAR,oBAAuK,yBAAKC,IAAI,oBAGpL,6BAASF,UAAU,aACjB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,oBACb,yBAAKE,IAAKI,EAAKY,YAAYS,YAAYC,gBAAgBC,MAAM3B,IAAKF,UAAU,iBAE9E,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,eACb,4BACGM,EAAKY,YAAYpB,OAEpB,2BACGQ,EAAKY,YAAYC,kBAO5B,6BAASnB,UAAU,gBACjB,yBAAK8B,wBAAyB,CAAEC,OAAQzB,EAAKc,SAAWpB,UAAU,eAGpE,kBAAC,IAAD,Q,GA1DuBG,IAAMC,WAgEtBC,YAER,IAAM2B,EAAS","file":"component---src-templates-blog-post-js-56de31e0d43547491f88.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./layout.scss\"\n\n\nclass Footer extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header = (\n      <>\n      <div className=\"announce-wrapper ph\">\n        <div className=\"container\">\n          <div className=\"an-details\">\n\n          </div>\n        </div>\n      </div>\n      </>\n    )\n    return (\n      <div>\n        <footer className=\"container\">\n          <div className=\"about\">\n            <div className=\"logo\"><a href=\"\">  <img src=\"/logo.svg\" className=\"logo\" /></a></div>\n            <div className=\"menu\">\n              <a href=\"/about\">About</a> • <a href=\"\">Help us</a>\n            </div>\n          </div>\n          <div className=\"credit\">\n            <div className=\"maker\">Made with ♥ by </div> <div className=\"make-list\"><a href=\"https://twitter.com/realvjy\">vijay verma</a> & <a href=\"https://twitter.com/_aakarshna\">Aakarshna</a></div>\n          </div>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Footer\n","import React from \"react\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Footer from \"../components/footer\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n    const c_list = this.props.data.allMarkdownRemark.edges\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <nav className=\"list-nav container\">\n          <div className=\"brand-nav\">\n            <Link to={`/`} className=\"brand\">\n              <img src=\"/logo.svg\" className=\"logo\" />\n            </Link>\n\n            <div className=\"country-links\">\n                <button className=\"d_button\">\n                    {post.frontmatter.title} <span className=\"d-arrow\"><img src=\"/down-arrow.svg\"/></span>\n                </button>\n                <ul className=\"d-list\">\n                  {c_list.map(({ node }) => {\n                    return(\n                      <li key={node.fields.slug}><a href={node.fields.slug}>{node.frontmatter.title}</a></li>\n                    )\n                  })}\n                </ul>\n              </div>\n          </div>\n          <div className=\"tweet\">\n            <a href=\"https://twitter.com/intent/tweet?url=trythisfood.co&text=Love%20travelling%20https%3A%2F%2Ftrythisfood.in%20by%20%40realvjy%20%40_aakarshna\">Share on twitter <img src=\"/twitter.svg\"/></a>\n          </div>\n        </nav>\n        <section className=\"list_hero\">\n          <div className=\"container\">\n          <div className=\"list_country_wrap\">\n            <div className=\"list_country_img\">\n              <img src={post.frontmatter.cover_image.childImageSharp.fluid.src} className=\"country-img\"/>\n            </div>\n            <div className=\"list_country_txt\">\n              <div className=\"summary_txt\">\n                <h1>\n                  {post.frontmatter.title}\n                </h1>\n                <p>\n                  {post.frontmatter.description}\n                </p>\n              </div>\n            </div>\n          </div>\n          </div>\n        </section>\n        <section className=\"list_section\">\n          <div dangerouslySetInnerHTML={{ __html: post.excerpt }} className=\"container\">\n          </div>\n        </section>\n        <Footer />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMarkdownRemark {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(format: HTML)\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        image{\n          childImageSharp {\n            fluid {\n              src\n            }\n          }\n        }\n        cover_image{\n          childImageSharp {\n            fluid {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}